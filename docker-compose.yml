services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  db-init:
    build: .
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    volumes:
      - ./scripts:/opt/airflow/scripts
    command: >
      bash -c "
        sleep 10 &&
        python -c \"
        from scripts.utils import create_tables_if_not_exist;
        create_tables_if_not_exist()
        \"
      "
    restart: on-failure

  airflow-init:
    build: .
    depends_on:
      - postgres
      - db-init
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./models:/opt/airflow/models
      - ./data:/opt/airflow/data
    entrypoint: /bin/bash
    command: -c "airflow db init && airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com"
    restart: on-failure

  airflow-webserver:
    build: .
    restart: always
    depends_on:
      - postgres
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./models:/opt/airflow/models
      - ./data:/opt/airflow/data
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    build: .
    restart: always
    depends_on:
      - postgres
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
    volumes:
      - ./dags:/opt/airflow/dags
      - ./scripts:/opt/airflow/scripts
      - ./models:/opt/airflow/models
      - ./data:/opt/airflow/data
    command: scheduler

  fastapi:
    build:
      context: .
      dockerfile: Dockerfile.api
    restart: always
    depends_on:
      - postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - OPENWEATHERMAP_API_KEY=${OPENWEATHERMAP_API_KEY}
    volumes:
      - ./api:/app/api
      - ./scripts:/app/scripts
      - ./models:/app/models
    ports:
      - "8000:8000"

volumes:
  postgres_data: 